// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique // Will store X user ID
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  xCredentials XCredentials?
  posts        Post[]
}

model XCredentials {
  userId         Int      @id
  accessToken    String
  refreshToken   String?
  tokenExpiresAt DateTime
  user           User     @relation(fields: [userId], references: [id])
}

model XApiUsage {
  id          Int      @id @default(autoincrement())
  monthYear   String   @unique // Format: "2024-03"
  postsUsed   Int      @default(0)
  lastUpdated DateTime @updatedAt
}

model Post {
  id           Int      @id @default(autoincrement())
  content      String
  scheduledFor DateTime
  status       String   @default("pending") // "pending", "processing", "completed", "failed", "archived"
  userId       Int
  user         User     @relation(fields: [userId], references: [id])
  createdAt    DateTime @default(now())
  isDeleted    Boolean  @default(false)
  error        String?

  @@index([status, scheduledFor])
}

model Lock {
  id         String   @id
  acquiredAt DateTime
}
